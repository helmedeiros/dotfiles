#!/bin/sh
#
# dot
#
# `dot` handles installation, updates, things like that. Run it periodically
# to make sure you're on the latest and greatest.

set -e

parentDirectory="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P)"
dotfilesDirectory="$(cd "$( dirname "$parentDirectory" )" && pwd -P)"

displayUsageAndExit() {
	echo "dot -- dotfiles management"
	echo ""
	echo "Usage: dot [options]"
	echo ""
	echo "Options:"
	echo "  -e, --edit    Open dotfiles directory for editing"
	echo "  -h, --help    Show this help message and exit"
	exit
}

while test $# -gt 0; do
	case "$1" in
		"-h"|"--help")
			displayUsageAndExit
			;;
		"-e"|"--edit")
			exec "$EDITOR" "$dotfilesDirectory"
			exit
			;;
		*)
			echo "Invalid option: $1"
			displayUsageAndExit
			;;
	esac
	shift
done

export ZSH=$HOME/.dotfiles

# Set macOS defaults
$ZSH/macos/set-defaults.sh

# Install homebrew
$ZSH/homebrew/install.sh 2>&1

# Upgrade homebrew
echo "› brew update"
brew update

# Mac Apple Store Upgrade
echo "› mas upgrade"
mas upgrade

# brew bundle
echo "› brew bundle"
brew bundle install --file="$dotfilesDirectory/Brewfile"

# Update Node.js and npm
echo "› Updating Node.js and npm"
# Source the existing NVM configuration
if [ -f "$ZSH/node/path.zsh" ]; then
	echo "Sourcing existing NVM configuration"
	source "$ZSH/node/path.zsh"
	
	# Check if NVM is available
	if command -v nvm &> /dev/null; then
		# Install and use a compatible Node.js version
		echo "Using NVM to install Node.js 20.17.0"
		nvm install 20.17.0
		nvm use 20.17.0
		echo "Node.js updated to $(node -v)"
		
		# Now update npm with the compatible Node.js version
		echo "› npm upgrade"
		npm install -g npm@latest --no-fund
		npm update -g --no-fund
		npm audit fix --force --no-fund
	else
		echo "NVM not properly loaded. Running node/install.sh to set up NVM"
		"$ZSH/node/install.sh"
	fi
else
	echo "NVM configuration not found. Running node/install.sh to set up NVM"
	"$ZSH/node/install.sh"
fi

# Install software
echo "› $ZSH/script/install"
$ZSH/script/install
